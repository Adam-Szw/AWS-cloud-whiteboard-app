package whiteboard_server;

import java.net.ConnectException;
import java.net.Socket;
import java.util.List;

/**
 * Creates connections to other servers.
 * 
 * @author aks60
 *
 */
public class ServerPeerAccepter implements Runnable {
	
	private int port;
	private Socket socket;
	private Server server;
	
	public ServerPeerAccepter(int port, Server server) {
		this.port = port;
		this.server = server;
	}

	@Override
	public void run() {
		while(true) {
			for(int i = 0; i < ips.size(); i++) {
				String host = ips.get(i);
				try {
					//todo - timeout this!!
					socket = new Socket(host, port);
					server.connectionsLock.lock();
					if(server.connectedServers.contains(host)) {
						server.connectionsLock.unlock();
						continue;
					}
					if(Server.DEBUG_MODE) System.out.println("New server peer connection established with: " + host);
					Connection connection = new Connection(server, socket, true, host);
					Thread connThread = new Thread(connection);
					connThread.start();
					server.serverConnections.add(connection);
					server.connectedServers.add(host);
					server.connectionsLock.unlock();
				} catch(ConnectException e){
					// This is expected. move on to the next connection
					continue;
				} catch(Exception e){
					System.out.println("Error encountered while connecting to another server");
					e.printStackTrace();
				}
			}
			// New server connections will not be made often
			Server.sleepThread("Peer accepter thread", Server.UPDATE_TICKRATE);
		}
	}

}
